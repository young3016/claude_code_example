import { Hook, HookCategory, HookType, ProgrammingLanguage } from './types';

export const hooksData: Hook[] = [
  {
    id: "1",
    name: "Security Command Validator",
    slug: "security-command-validator",
    category: HookCategory.SECURITY,
    description: "Validates and blocks potentially dangerous commands before execution",
    longDescription: "A comprehensive security hook that intercepts PreToolUse events to validate commands against a configurable blocklist. Prevents accidental execution of dangerous operations like rm -rf, unauthorized git pushes, and system modifications.",
    repositoryUrl: "https://github.com/disler/claude-code-hooks-mastery",
    author: "disler",
    stars: 342,
    hookTypes: [HookType.PRE_TOOL_USE, HookType.USER_PROMPT_SUBMIT],
    tags: ["security", "validation", "safety", "command-filter"],
    language: ProgrammingLanguage.PYTHON,
    createdAt: new Date("2024-12-15"),
    updatedAt: new Date("2025-01-20"),
    featured: true
  },
  {
    id: "2",
    name: "Multi-Agent Observability",
    slug: "multi-agent-observability",
    category: HookCategory.MONITORING,
    description: "Real-time monitoring and visualization for Claude Code agent activities",
    longDescription: "Provides comprehensive observability for Claude Code operations with real-time WebSocket updates, SQLite persistence, and a Vue dashboard showing agent activity, tool usage patterns, and conversation history.",
    repositoryUrl: "https://github.com/disler/claude-code-hooks-multi-agent-observability",
    author: "disler",
    stars: 215,
    hookTypes: [HookType.PRE_TOOL_USE, HookType.POST_TOOL_USE, HookType.SUBAGENT_STOP],
    tags: ["monitoring", "observability", "analytics", "dashboard"],
    language: ProgrammingLanguage.TYPESCRIPT,
    createdAt: new Date("2025-01-05"),
    updatedAt: new Date("2025-01-22"),
    featured: true
  },
  {
    id: "3",
    name: "Intelligent TTS Feedback",
    slug: "intelligent-tts-feedback",
    category: HookCategory.NOTIFICATION,
    description: "AI-generated audio feedback for Claude Code operations",
    longDescription: "Enhances developer experience with intelligent text-to-speech feedback that provides contextual audio cues for different operations, errors, and completions using OpenAI's TTS API.",
    repositoryUrl: "https://github.com/example/claude-tts-hooks",
    author: "voicedev",
    stars: 128,
    hookTypes: [HookType.POST_TOOL_USE, HookType.NOTIFICATION, HookType.STOP],
    tags: ["audio", "feedback", "tts", "accessibility"],
    language: ProgrammingLanguage.PYTHON,
    createdAt: new Date("2024-11-20"),
    updatedAt: new Date("2025-01-10"),
    featured: false
  },
  {
    id: "4",
    name: "Auto Code Formatter",
    slug: "auto-code-formatter",
    category: HookCategory.DEVELOPMENT,
    description: "Automatically formats code using Prettier before accepting edits",
    longDescription: "Ensures consistent code formatting by running Prettier on all file modifications before they're committed. Supports multiple file types and respects project-specific Prettier configurations.",
    repositoryUrl: "https://github.com/formatting/claude-prettier-hook",
    author: "codeformat",
    stars: 456,
    hookTypes: [HookType.PRE_TOOL_USE, HookType.POST_TOOL_USE],
    tags: ["formatting", "prettier", "code-quality", "automation"],
    language: ProgrammingLanguage.JAVASCRIPT,
    createdAt: new Date("2024-10-15"),
    updatedAt: new Date("2025-01-18"),
    featured: true
  },
  {
    id: "5",
    name: "Git Workflow Automation",
    slug: "git-workflow-automation",
    category: HookCategory.PRODUCTIVITY,
    description: "Streamlines git operations with intelligent commit messages and branch management",
    longDescription: "Automates common git workflows including smart commit message generation, branch naming conventions, and pre-push validations. Integrates with popular git hosting services.",
    repositoryUrl: "https://github.com/gittools/claude-git-hooks",
    author: "gittools",
    stars: 289,
    hookTypes: [HookType.PRE_TOOL_USE, HookType.POST_TOOL_USE],
    tags: ["git", "automation", "workflow", "version-control"],
    language: ProgrammingLanguage.BASH,
    createdAt: new Date("2024-12-01"),
    updatedAt: new Date("2025-01-15"),
    featured: false
  },
  {
    id: "6",
    name: "Slack Integration",
    slug: "slack-integration",
    category: HookCategory.INTEGRATION,
    description: "Send Claude Code activity notifications to Slack channels",
    longDescription: "Integrates Claude Code with Slack to send real-time notifications about coding activities, errors, and completions to specified channels or users. Highly configurable with message templates.",
    repositoryUrl: "https://github.com/integrations/claude-slack-hook",
    author: "slackbot",
    stars: 178,
    hookTypes: [HookType.NOTIFICATION, HookType.STOP, HookType.SUBAGENT_STOP],
    tags: ["slack", "integration", "notifications", "collaboration"],
    language: ProgrammingLanguage.TYPESCRIPT,
    createdAt: new Date("2024-11-10"),
    updatedAt: new Date("2025-01-12"),
    featured: false
  },
  {
    id: "7",
    name: "Type Safety Validator",
    slug: "type-safety-validator",
    category: HookCategory.DEVELOPMENT,
    description: "Runs TypeScript type checking after code modifications",
    longDescription: "Automatically runs TypeScript compiler checks after file modifications to ensure type safety. Provides detailed error reports and prevents commits with type errors.",
    repositoryUrl: "https://github.com/typescript/claude-type-hooks",
    author: "typesafe",
    stars: 312,
    hookTypes: [HookType.POST_TOOL_USE],
    tags: ["typescript", "type-checking", "validation", "quality"],
    language: ProgrammingLanguage.TYPESCRIPT,
    createdAt: new Date("2024-12-20"),
    updatedAt: new Date("2025-01-19"),
    featured: false
  },
  {
    id: "8",
    name: "Session Context Manager",
    slug: "session-context-manager",
    category: HookCategory.UTILITY,
    description: "Manages and persists context between Claude Code sessions",
    longDescription: "Intelligently manages session context, preserving important information between Claude Code sessions. Includes context compression and smart summarization for optimal token usage.",
    repositoryUrl: "https://github.com/context/claude-session-hooks",
    author: "contextmaster",
    stars: 234,
    hookTypes: [HookType.SESSION_START, HookType.PRE_COMPACT, HookType.STOP],
    tags: ["context", "session", "persistence", "optimization"],
    language: ProgrammingLanguage.PYTHON,
    createdAt: new Date("2025-01-02"),
    updatedAt: new Date("2025-01-21"),
    featured: false
  },
  {
    id: "9",
    name: "Performance Profiler",
    slug: "performance-profiler",
    category: HookCategory.MONITORING,
    description: "Tracks and reports performance metrics for Claude Code operations",
    longDescription: "Comprehensive performance profiling for Claude Code operations, tracking execution times, resource usage, and generating detailed performance reports with optimization suggestions.",
    repositoryUrl: "https://github.com/perf/claude-profiler-hooks",
    author: "perfmaster",
    stars: 167,
    hookTypes: [HookType.PRE_TOOL_USE, HookType.POST_TOOL_USE, HookType.STOP],
    tags: ["performance", "profiling", "metrics", "optimization"],
    language: ProgrammingLanguage.PYTHON,
    createdAt: new Date("2024-12-10"),
    updatedAt: new Date("2025-01-16"),
    featured: false
  },
  {
    id: "10",
    name: "Environment Validator",
    slug: "environment-validator",
    category: HookCategory.SECURITY,
    description: "Validates environment variables and secrets before operations",
    longDescription: "Ensures sensitive environment variables are properly configured and prevents accidental exposure of secrets in code or logs. Includes integration with popular secret management tools.",
    repositoryUrl: "https://github.com/security/claude-env-hooks",
    author: "securedev",
    stars: 198,
    hookTypes: [HookType.SESSION_START, HookType.PRE_TOOL_USE],
    tags: ["security", "environment", "secrets", "validation"],
    language: ProgrammingLanguage.PYTHON,
    createdAt: new Date("2024-11-25"),
    updatedAt: new Date("2025-01-14"),
    featured: false
  },
  {
    id: "11",
    name: "Test Runner Integration",
    slug: "test-runner-integration",
    category: HookCategory.DEVELOPMENT,
    description: "Automatically runs tests after code modifications",
    longDescription: "Integrates with popular testing frameworks to automatically run relevant tests after code changes. Supports Jest, Pytest, Mocha, and more with intelligent test selection.",
    repositoryUrl: "https://github.com/testing/claude-test-hooks",
    author: "testrunner",
    stars: 276,
    hookTypes: [HookType.POST_TOOL_USE],
    tags: ["testing", "automation", "quality", "ci"],
    language: ProgrammingLanguage.JAVASCRIPT,
    createdAt: new Date("2024-12-05"),
    updatedAt: new Date("2025-01-17"),
    featured: false
  },
  {
    id: "12",
    name: "Documentation Generator",
    slug: "documentation-generator",
    category: HookCategory.PRODUCTIVITY,
    description: "Automatically generates and updates code documentation",
    longDescription: "Uses AI to generate comprehensive documentation for modified code, including JSDoc comments, README updates, and API documentation. Maintains consistency with existing documentation style.",
    repositoryUrl: "https://github.com/docs/claude-doc-hooks",
    author: "docmaster",
    stars: 223,
    hookTypes: [HookType.POST_TOOL_USE, HookType.STOP],
    tags: ["documentation", "automation", "productivity", "ai"],
    language: ProgrammingLanguage.TYPESCRIPT,
    createdAt: new Date("2024-11-30"),
    updatedAt: new Date("2025-01-13"),
    featured: false
  }
];

export function getFeaturedHooks(): Hook[] {
  return hooksData.filter(hook => hook.featured);
}

export function getHooksByCategory(category: HookCategory): Hook[] {
  return hooksData.filter(hook => hook.category === category);
}

export function getHookBySlug(slug: string): Hook | undefined {
  return hooksData.find(hook => hook.slug === slug);
}